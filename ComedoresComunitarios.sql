CREATE DATABASE ComedoresComunitarios;
GO

USE ComedoresComunitarios;
GO

DROP TABLE IF EXISTS Comensal;
CREATE TABLE Comensal(
	IDComensal INT AUTO_INCREMENT,
	CURP VARCHAR(18) NOT NULL,
	Nombre VARCHAR(50) NOT NULL,
	Apellido VARCHAR(50) NOT NULL, 
	Fecha DATE NOT NULL,
	Genero VARCHAR(10),
	Pass VARCHAR(80) NOT NULL,
	PRIMARY KEY (IDComensal)
);
GO

DROP TABLE IF EXISTS Responsable;
CREATE TABLE Responsable(
	IDResponsable INT AUTO_INCREMENT,
	CURP VARCHAR(18) NOT NULL,
	Nombre VARCHAR(50) NOT NULL,
	Pass VARCHAR(80) NOT NULL,
	Estado VARCHAR(20) NOT NULL,
	PRIMARY KEY (IDResponsable)
);
GO

DROP TABLE IF EXISTS AdministradorDIF;
CREATE TABLE AdministradorDIF(
	IDAdministrador INT AUTO_INCREMENT,
	Usuario VARCHAR(50) NOT NULL,
	Pass VARCHAR(80) NOT NULL,
	PRIMARY KEY (IDAdministrador)
);
GO

DROP TABLE IF EXISTS Afeccion;
CREATE TABLE Afeccion(
	IDAfeccion INT AUTO_INCREMENT,
	Tipo VARCHAR(50) NOT NULL, 
	PRIMARY KEY (IDAfeccion)
);
GO

DROP TABLE IF EXISTS Comedor;
CREATE TABLE Comedor(
	IDComedor INT AUTO_INCREMENT,
	Ubicacion VARCHAR(100) NOT NULL,
	Fecha DATE NOT NULL,
	Estado VARCHAR(20) NOT NULL,
	IDResponsable INT NOT NULL,
	CONSTRAINT FK_Comedor_RESPONSABLE FOREIGN KEY (IDResponsable)
	REFERENCES Responsable(IDResponsable)
	ON UPDATE NO ACTION
	ON DELETE NO ACTION,
	PRIMARY KEY(IDComedor)
);
GO

DROP TABLE IF EXISTS ComensalAfeccion;
CREATE TABLE ComensalAfeccion(
	IDComensal INT NOT NULL,
	CONSTRAINT FK_ComensalAfeccion_COMENSAL FOREIGN KEY (IDComensal)
	REFERENCES Comensal(IDComensal)
	ON UPDATE NO ACTION
	ON DELETE NO ACTION,
	IDAfeccion INT NOT NULL,
	CONSTRAINT FK_ComensalAfeccion_AFECCION FOREIGN KEY (IDAfeccion)
	REFERENCES Afeccion(IDAfeccion)
	ON UPDATE NO ACTION
	ON DELETE NO ACTION
);
GO

DROP TABLE IF EXISTS ComedorComensal;
CREATE TABLE ComedorComensal(
	IDComensal INT NOT NULL, 
	CONSTRAINT FK_ComedorComensal_IDCOMENSAL FOREIGN KEY (IDComensal)
	REFERENCES Comensal(IDComensal)
	ON UPDATE NO ACTION 
	ON DELETE NO ACTION,
	IDComedor INT NOT NULL,
	CONSTRAINT FK_ComedorComensal_IDCOMEDOR FOREIGN KEY (IDComedor)
	REFERENCES Comedor(IDComedor)
	ON UPDATE NO ACTION
	ON DELETE NO ACTION,
	Pago INT NOT NULL,
	Fecha DATE NOT NULL,
	Raciones INT NOT NULL
);
GO

DROP TABLE IF EXISTS RacionDonada;
CREATE TABLE RacionDonada(
	IDComedor INT NOT NULL,
	CONSTRAINT FK_RacionDonada_COMEDOR FOREIGN KEY (IDComedor)
	REFERENCES Comedor(IDComedor)
	ON UPDATE NO ACTION
	ON DELETE NO ACTION,
	IDComensal INT NOT NULL,
	CONSTRAINT FK_RacionDonada_COMENSAL FOREIGN KEY (IDComensal)
	REFERENCES Comensal(IDComensal)
	ON UPDATE NO ACTION
	ON DELETE NO ACTION,
	Fecha DATE
);
GO

DROP TABLE IF EXISTS Producto;
CREATE TABLE Producto(
	IDProducto INT AUTO_INCREMENT,
	Nombre VARCHAR(50) NOT NULL,
	Presentacion VARCHAR(50) NOT NULL,
	PRIMARY KEY(IDProducto)
);
GO

DROP TABLE IF EXISTS Inventario;
CREATE TABLE Inventario(
	IDComedor INT NOT NULL,
	CONSTRAINT FK_Inventario_COMEDOR FOREIGN KEY (IDComedor)
	REFERENCES Comedor(IDComedor)
	ON UPDATE NO ACTION
	ON DELETE NO ACTION,
	IDProducto INT NOT NULL,
	CONSTRAINT FK_Inventario_PRODUCTO FOREIGN KEY (IDProducto)
	REFERENCES Producto(IDProducto)
	ON UPDATE NO ACTION
	ON DELETE NO ACTION,
	Cantidad INT NOT NULL
);
GO

-- DELIMITER $$
-- CREATE TRIGGER insertarComensal
-- BEFORE INSERT
-- 	ON Comensal FOR EACH ROW
-- BEGIN
-- 	DECLARE IDComensalNuevo INT;
-- 	DECLARE PassNuevo VARCHAR(80);
-- 	SELECT NEW.IDComensal INTO IDComensalNuevo;
	
-- 	SET NEW.Pass = PASSWORD(Pass);
-- END;
-- DELIMITER $$

-- CREATE OR ALTER TRIGGER TRG_Comensal_INSERT
-- ON Comensal
-- INSTEAD OF INSERT
-- AS 
-- BEGIN 
-- 	DECLARE @CURP AS VARCHAR(18);
-- 	DECLARE @Nombre AS VARCHAR(50);
-- 	DECLARE @Apellido AS VARCHAR(50);
-- 	DECLARE @Fecha AS DATE;
-- 	DECLARE @Genero AS VARCHAR(10);
-- 	DECLARE @Pass AS VARCHAR(64);
	
-- 	SELECT @CURP = (SELECT CURP from inserted);
-- 	SELECT @Nombre = (SELECT Nombre from inserted);
-- 	SELECT @Apellido = (SELECT Apellido from inserted);
-- 	SELECT @Fecha = (SELECT Fecha from inserted);
-- 	SELECT @Genero = (SELECT Genero from inserted);
-- 	SELECT @Pass = (SELECT Pass from inserted);
	
-- 	DECLARE @Salt AS VARCHAR(16);
-- 	SELECT @Salt = CONVERT (VARCHAR(16),CRYPT_GEN_RANDOM(8),2);
	
-- 	DECLARE @HashedPassword AS VARCHAR(80);
-- 	SELECT @HashedPassword = @Salt + CONVERT(VARCHAR(64), HASHBYTES('SHA2_256', @Salt + @Pass), 2);
	
-- 	INSERT INTO Comensal (CURP, Nombre, Apellido, Fecha, Genero, Pass) VALUES
-- 	(@CURP, @Nombre, @Apellido, @Fecha, @Genero, @HashedPassword);
	
-- END;
-- GO


	

